<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="selleck.email.dao.ArticleMapper">
	<resultMap id="BaseResultMap" type="selleck.email.pojo.Article">
		<id column="ID" property="id" jdbcType="INTEGER" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="TITLE_INDEX" property="titleIndex" jdbcType="LONGVARCHAR" />
		<result column="abstract" property="abs" jdbcType="LONGVARCHAR" />
		<result column="keyword" property="keyword" jdbcType="VARCHAR" />
		<result column="KEY_PLUS" property="keywordPlus" jdbcType="VARCHAR" />
		<result column="CORRESPONDINGAUTHOR" property="correspondingAuthor" jdbcType="VARCHAR" />
		<result column="CORRESPONDINGADDRESS" property="correspondingAddress" jdbcType="LONGVARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="SOURCE_PUBLICATION" property="sourcePublication" jdbcType="VARCHAR" />
		<result column="PDATE" property="pDate" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="VARCHAR" />
		<result column="classification" property="classification" jdbcType="VARCHAR" />
		<result column="research" property="research" jdbcType="VARCHAR" />
		<result column="assumedKeyWords" property="assumedKeyWords" jdbcType="VARCHAR" />
		<result column="definiteKeyWords" property="definiteKeyWords" jdbcType="VARCHAR" />
		<result column="product" property="product" jdbcType="VARCHAR" />
		<result column="small" property="small" jdbcType="VARCHAR" />
		<result column="big" property="big" jdbcType="VARCHAR" />
		<result column="score" property="score" jdbcType="INTEGER" />
		<result column="passed" property="passed" jdbcType="TINYINT" />
		<result column="parsed" property="parsed" jdbcType="TINYINT" />
	</resultMap>
	
	<resultMap id="ArticleAuthorRel" type="selleck.email.pojo.ArticleAuthorRel">
		<result column="author_id" property="authorId" jdbcType="INTEGER" />
		<result column="article_id" property="articleId" jdbcType="INTEGER" />
		<result column="priority" property="priority" jdbcType="INTEGER" />
	</resultMap>
    
    <sql id="Example_Where_Clause" >
    <trim prefix="where" prefixOverrides="and|or" >
      <if test="condition.email != null" >
         and email = #{condition.email}
      </if>
    </trim>
  </sql>
  
	<sql id="Base_Column_List">
		ID,title,TITLE_INDEX,abstract,keyword,KEY_PLUS,CORRESPONDINGAUTHOR,CORRESPONDINGADDRESS,
		email,SOURCE_PUBLICATION,PDATE,type,classification,research,
		assumedKeyWords,definiteKeyWords,product,small,big,score,passed,parsed
  	</sql>
  	
  	<select id="selectByExample" resultMap="BaseResultMap" parameterType="common.handle.model.Criteria" >
    <include refid="common.MySql_Pagination_Head" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from selleck_edm_article
    <if test="whereClause != null" >
      where ${whereClause}
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="common.MySql_Pagination_Tail" />
  </select>
  
  <select id="findArticleByAuthor" resultMap="BaseResultMap" parameterType="selleck.email.pojo.Author" >
    select
    <include refid="Base_Column_List" />
    from selleck_edm_article a
	where a.id = (
		select r.article_id from selleck_edm_article_author_rel r where r.author_id = #{id,jdbcType=INTEGER}
	)
  </select>
  
  <select id="findArticleRelByAuthor" resultMap="ArticleAuthorRel" parameterType="selleck.email.pojo.Author" >
    select
   	 author_id,article_id,priority
    from selleck_edm_article_author_rel
	where author_id = #{id,jdbcType=INTEGER}
  </select>
  
 <update id="updateArticle"  parameterType="selleck.email.pojo.Article">
    update selleck_edm_article
    set
     assumedKeyWords = #{assumedKeyWords,jdbcType=VARCHAR} , 
     definiteKeyWords = #{definiteKeyWords,jdbcType=VARCHAR},
     product = #{product,jdbcType=VARCHAR},
     small = #{small,jdbcType=VARCHAR},
     big = #{big,jdbcType=VARCHAR},
     score = #{score,jdbcType=INTEGER},
     passed = #{passed,jdbcType=TINYINT},
     parsed = #{passed,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
   <insert id="insertArticle" parameterType="selleck.email.pojo.Article" useGeneratedKeys="true" keyProperty="id">
    insert into selleck_edm_article ( title, TITLE_INDEX, ABSTRACT, KEYWORD,KEY_PLUS,email,CORRESPONDINGAUTHOR,CORRESPONDINGADDRESS,SOURCE_PUBLICATION,pDate,type,classification,research,source
      )
    values ( #{title,jdbcType=LONGVARCHAR}, #{titleIndex,jdbcType=VARCHAR}, 
      #{abs,jdbcType=LONGVARCHAR}, #{keyword,jdbcType=VARCHAR},#{keywordPlus,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR},#{correspondingAuthor,jdbcType=VARCHAR},#{correspondingAddress,jdbcType=LONGVARCHAR},
      #{sourcePublication,jdbcType=VARCHAR}, #{pDate,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},#{classification,jdbcType=VARCHAR},
       #{research,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}
      )
  </insert>
  
  <select id="selectMaxId" resultType="java.lang.Integer"  >
    select IFNULL(max(id),0) from selleck_edm_article
  </select>
</mapper>